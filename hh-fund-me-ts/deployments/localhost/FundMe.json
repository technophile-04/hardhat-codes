{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x72004505852de78d3c89a396738a84844290f92f8e72e4bfe5d4104b267ccbe5",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "850053",
    "logsBloom": "0x
    "blockHash": "0x2dbff9430a6363bff581dee3e412ebe53aa10d086bec4a20e7209dc5c66d6931",
    "transactionHash": "0x72004505852de78d3c89a396738a84844290f92f8e72e4bfe5d4104b267ccbe5",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "850053",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "ed1dec9c779dc4efb93f1ac50e106ea3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    // Immutables and constant are not stored insied a storage slot instead they are stored in bytecode itself\\n    uint256 public constant MIN_USD = 50 * 1e18;\\n    address public immutable i_owner;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address _priceFeed) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n    }\\n\\n    function fund() public payable {\\n        // msg.value.getConversionRate(); msg.value becomes first parameter of the function\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MIN_USD,\\n            \\\"Price is lower, send more\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        /* Reset mapping */\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address currAddress = funders[i];\\n            addressToAmountFunded[currAddress] = 0;\\n        }\\n\\n        /* Reseting the array to point to new location and intial element 0 */\\n        funders = new address[](0);\\n\\n        // msg.sender = address\\n        // paybale(msg.sender) = paybale address;\\n\\n        (bool callSuccess, ) = payable(address(this)).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call falied \\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        // The string is stored in string array\\n        // require(msg.sender == i_owner, \\\"Not owner of the contract\\\");\\n\\n        // Hence we dont store array of string\\n        if (msg.sender == i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    /* \\n        A contract receiving Ether must have at least one of the functions below\\n        receive() external payable\\n        fallback() external payable\\n        receive() is called if msg.data is empty, otherwise fallback() is called.\\n    */\\n\\n    /*                \\n            send Ether\\n               |\\n         msg.data is empty?\\n              / \\\\\\n            yes  no\\n            /     \\\\\\nreceive() exists?  fallback()\\n         /   \\\\\\n        yes   no\\n        /      \\\\\\n    receive()   fallback() \\n    */\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x696a0e6566b9ae821584be2ae44dcaa2cd2af0b980fc3acfe9b83f5fa7039cb5\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    // They can't have state variables and also all func will be internal\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (\\n            ,\\n            /*uint80 roundID*/\\n            int256 price, /*uint startedAt*/ /*uint timeStamp*/\\n            ,\\n            ,\\n\\n        ) = /*uint80 answeredInRound*/\\n            priceFeed.latestRoundData();\\n        //because returned value has 8 decimal place and our msg.value is of 18\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 _ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 currEthPrice = getPrice(priceFeed);\\n        uint256 ethAmountToUSD = (currEthPrice * _ethAmount) / 1e18;\\n        return ethAmountToUSD;\\n    }\\n}\\n\",\"keccak256\":\"0x18fe617b7d2bd009d2c5c3c22099f2bf873d9e8aa214e67829a1562f4ad9b75e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f64380380610f64833981810160405281019061003291906100c5565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b6000815190506100bf81610129565b92915050565b6000602082840312156100db576100da610124565b5b60006100e9848285016100b0565b91505092915050565b60006100fd82610104565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610132816100f2565b811461013d57600080fd5b50565b60805160601c610dff610165600039600081816102e101526105600152610dff6000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063213dbea21461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b6040516100af91906109a3565b60405180910390f35b3480156100c457600080fd5b506100cd6102df565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107ad565b610520565b60405161010391906109a3565b60405180910390f35b34801561011857600080fd5b50610121610538565b60405161012e9190610948565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055e565b604051610163919061092d565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906107da565b610582565b6040516101a0919061092d565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c190919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610963565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610365576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041057600080828154811061038a57610389610cb5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040890610c0e565b915050610368565b50600067ffffffffffffffff81111561042c5761042b610ce4565b5b60405190808252806020026020018201604052801561045a5781602001602082028036833780820191505090505b506000908051906020019061047092919061069d565b5060003073ffffffffffffffffffffffffffffffffffffffff164760405161049790610918565b60006040518083038185875af1925050503d80600081146104d4576040519150601f19603f3d011682016040523d82523d6000602084013e6104d9565b606091505b505090508061051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051490610983565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cd836105fd565b90506000670de0b6b3a764000085836105e69190610b22565b6105f091906109da565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064657600080fd5b505afa15801561065a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067e9190610807565b5050509150506402540be400816106959190610a0b565b915050919050565b828054828255906000526020600020908101928215610716579160200282015b828111156107155782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bd565b5b5090506107239190610727565b5090565b5b80821115610740576000816000905550600101610728565b5090565b60008135905061075381610d6d565b92915050565b60008151905061076881610d84565b92915050565b60008135905061077d81610d9b565b92915050565b60008151905061079281610d9b565b92915050565b6000815190506107a781610db2565b92915050565b6000602082840312156107c3576107c2610d13565b5b60006107d184828501610744565b91505092915050565b6000602082840312156107f0576107ef610d13565b5b60006107fe8482850161076e565b91505092915050565b600080600080600060a0868803121561082357610822610d13565b5b600061083188828901610798565b955050602061084288828901610759565b945050604061085388828901610783565b935050606061086488828901610783565b925050608061087588828901610798565b9150509295509295909350565b61088b81610b7c565b82525050565b61089a81610bd8565b82525050565b60006108ad6019836109c9565b91506108b882610d18565b602082019050919050565b60006108d06000836109be565b91506108db82610d41565b600082019050919050565b60006108f3600c836109c9565b91506108fe82610d44565b602082019050919050565b61091281610bb8565b82525050565b6000610923826108c3565b9150819050919050565b60006020820190506109426000830184610882565b92915050565b600060208201905061095d6000830184610891565b92915050565b6000602082019050818103600083015261097c816108a0565b9050919050565b6000602082019050818103600083015261099c816108e6565b9050919050565b60006020820190506109b86000830184610909565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109e582610bb8565b91506109f083610bb8565b925082610a00576109ff610c86565b5b828204905092915050565b6000610a1682610b8e565b9150610a2183610b8e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610a6057610a5f610c57565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610a9d57610a9c610c57565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ada57610ad9610c57565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b1757610b16610c57565b5b828202905092915050565b6000610b2d82610bb8565b9150610b3883610bb8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b7157610b70610c57565b5b828202905092915050565b6000610b8782610b98565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610be382610bea565b9050919050565b6000610bf582610bfc565b9050919050565b6000610c0782610b98565b9050919050565b6000610c1982610bb8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c4c57610c4b610c57565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f5072696365206973206c6f7765722c2073656e64206d6f726500000000000000600082015250565b50565b7f43616c6c2066616c696564200000000000000000000000000000000000000000600082015250565b610d7681610b7c565b8114610d8157600080fd5b50565b610d8d81610b8e565b8114610d9857600080fd5b50565b610da481610bb8565b8114610daf57600080fd5b50565b610dbb81610bc2565b8114610dc657600080fd5b5056fea26469706673582212201fe015943fd1e7e13b6368426ea1d13beb61cc1f516f312b759b0b38fc640c0364736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063213dbea21461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b6040516100af91906109a3565b60405180910390f35b3480156100c457600080fd5b506100cd6102df565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107ad565b610520565b60405161010391906109a3565b60405180910390f35b34801561011857600080fd5b50610121610538565b60405161012e9190610948565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055e565b604051610163919061092d565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906107da565b610582565b6040516101a0919061092d565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c190919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610963565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610365576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041057600080828154811061038a57610389610cb5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040890610c0e565b915050610368565b50600067ffffffffffffffff81111561042c5761042b610ce4565b5b60405190808252806020026020018201604052801561045a5781602001602082028036833780820191505090505b506000908051906020019061047092919061069d565b5060003073ffffffffffffffffffffffffffffffffffffffff164760405161049790610918565b60006040518083038185875af1925050503d80600081146104d4576040519150601f19603f3d011682016040523d82523d6000602084013e6104d9565b606091505b505090508061051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051490610983565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cd836105fd565b90506000670de0b6b3a764000085836105e69190610b22565b6105f091906109da565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064657600080fd5b505afa15801561065a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067e9190610807565b5050509150506402540be400816106959190610a0b565b915050919050565b828054828255906000526020600020908101928215610716579160200282015b828111156107155782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bd565b5b5090506107239190610727565b5090565b5b80821115610740576000816000905550600101610728565b5090565b60008135905061075381610d6d565b92915050565b60008151905061076881610d84565b92915050565b60008135905061077d81610d9b565b92915050565b60008151905061079281610d9b565b92915050565b6000815190506107a781610db2565b92915050565b6000602082840312156107c3576107c2610d13565b5b60006107d184828501610744565b91505092915050565b6000602082840312156107f0576107ef610d13565b5b60006107fe8482850161076e565b91505092915050565b600080600080600060a0868803121561082357610822610d13565b5b600061083188828901610798565b955050602061084288828901610759565b945050604061085388828901610783565b935050606061086488828901610783565b925050608061087588828901610798565b9150509295509295909350565b61088b81610b7c565b82525050565b61089a81610bd8565b82525050565b60006108ad6019836109c9565b91506108b882610d18565b602082019050919050565b60006108d06000836109be565b91506108db82610d41565b600082019050919050565b60006108f3600c836109c9565b91506108fe82610d44565b602082019050919050565b61091281610bb8565b82525050565b6000610923826108c3565b9150819050919050565b60006020820190506109426000830184610882565b92915050565b600060208201905061095d6000830184610891565b92915050565b6000602082019050818103600083015261097c816108a0565b9050919050565b6000602082019050818103600083015261099c816108e6565b9050919050565b60006020820190506109b86000830184610909565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109e582610bb8565b91506109f083610bb8565b925082610a00576109ff610c86565b5b828204905092915050565b6000610a1682610b8e565b9150610a2183610b8e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610a6057610a5f610c57565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610a9d57610a9c610c57565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ada57610ad9610c57565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b1757610b16610c57565b5b828202905092915050565b6000610b2d82610bb8565b9150610b3883610bb8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b7157610b70610c57565b5b828202905092915050565b6000610b8782610b98565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610be382610bea565b9050919050565b6000610bf582610bfc565b9050919050565b6000610c0782610b98565b9050919050565b6000610c1982610bb8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c4c57610c4b610c57565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f5072696365206973206c6f7765722c2073656e64206d6f726500000000000000600082015250565b50565b7f43616c6c2066616c696564200000000000000000000000000000000000000000600082015250565b610d7681610b7c565b8114610d8157600080fd5b50565b610d8d81610b8e565b8114610d9857600080fd5b50565b610da481610bb8565b8114610daf57600080fd5b50565b610dbb81610bc2565b8114610dc657600080fd5b5056fea26469706673582212201fe015943fd1e7e13b6368426ea1d13beb61cc1f516f312b759b0b38fc640c0364736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}