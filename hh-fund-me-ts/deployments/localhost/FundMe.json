{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xfafd84580a935106556d8150b3cc46cfcd6b7b28124107f7939d9dca7e56cbb9",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "984649",
    "logsBloom": "0x
    "blockHash": "0x51e023f3bc8321a3367f7739ce94bd9749fb0a85cbca6931b70d2d6743f98b6e",
    "transactionHash": "0xfafd84580a935106556d8150b3cc46cfcd6b7b28124107f7939d9dca7e56cbb9",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "984649",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "38ed4ff329ebc923c97b2537c718cb93",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    // Immutables and constant are not stored insied a storage slot instead they are stored in bytecode itself\\n    uint256 public constant MIN_USD = 50 * 1e18;\\n    address public immutable i_owner;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n    AggregatorV3Interface public priceFeed;\\n\\n    modifier onlyOwner() {\\n        // The string is stored in string array\\n        // require(msg.sender == i_owner, \\\"Not owner of the contract\\\");\\n\\n        // Hence we dont store array of string\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address _priceFeed) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        // msg.value.getConversionRate(); msg.value becomes first parameter of the function\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MIN_USD,\\n            \\\"Price is lower, send more\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        /* Reset mapping */\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address currAddress = funders[i];\\n            addressToAmountFunded[currAddress] = 0;\\n        }\\n\\n        /* Reseting the array to point to new location and intial element 0 */\\n        funders = new address[](0);\\n\\n        // msg.sender = address\\n        // paybale(msg.sender) = paybale address;\\n\\n        (bool callSuccess, ) = payable(i_owner).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call falied \\\");\\n    }\\n\\n    function cheaperWithdraw() public payable {\\n        address[] memory m_funders = funders;\\n\\n        for (uint256 i = 0; i < m_funders.length; i++) {\\n            address currAddress = m_funders[i];\\n            addressToAmountFunded[currAddress] = 0;\\n        }\\n\\n        funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(i_owner).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call falied \\\");\\n    }\\n\\n    /* \\n        A contract receiving Ether must have at least one of the functions below\\n        receive() external payable\\n        fallback() external payable\\n        receive() is called if msg.data is empty, otherwise fallback() is called.\\n    */\\n\\n    /*                \\n            send Ether\\n               |\\n         msg.data is empty?\\n              / \\\\\\n            yes  no\\n            /     \\\\\\nreceive() exists?  fallback()\\n         /   \\\\\\n        yes   no\\n        /      \\\\\\n    receive()   fallback() \\n    */\\n}\\n\",\"keccak256\":\"0x4c029e6a14d284069e616243e503269d22b211863a558984590611909a581ef6\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    // They can't have state variables and also all func will be internal\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (\\n            ,\\n            /*uint80 roundID*/\\n            int256 price, /*uint startedAt*/ /*uint timeStamp*/\\n            ,\\n            ,\\n\\n        ) = /*uint80 answeredInRound*/\\n            priceFeed.latestRoundData();\\n        //because returned value has 8 decimal place and our msg.value is of 18\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 _ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 currEthPrice = getPrice(priceFeed);\\n        uint256 ethAmountToUSD = (currEthPrice * _ethAmount) / 1e18;\\n        return ethAmountToUSD;\\n    }\\n}\\n\",\"keccak256\":\"0x18fe617b7d2bd009d2c5c3c22099f2bf873d9e8aa214e67829a1562f4ad9b75e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011f8380380620011f88339818101604052810190620000379190620000cd565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600081519050620000c78162000138565b92915050565b600060208284031215620000e657620000e562000133565b5b6000620000f684828501620000b6565b91505092915050565b60006200010c8262000113565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014381620000ff565b81146200014f57600080fd5b50565b60805160601c61107262000186600039600081816102f6015281816104890152818161070501526107d301526110726000f3fe60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610142578063be2693f01461014c578063dba6335f14610156578063dc0d3dff146101815761008e565b8063213dbea2146100985780633ccfd60b146100c35780633e47d6f3146100da578063741bef1a146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102e7565b6040516100ba9190610c16565b60405180910390f35b3480156100cf57600080fd5b506100d86102f4565b005b3480156100e657600080fd5b5061010160048036038101906100fc9190610a20565b610554565b60405161010e9190610c16565b60405180910390f35b34801561012357600080fd5b5061012c61056c565b6040516101399190610bbb565b60405180910390f35b61014a6101be565b005b610154610592565b005b34801561016257600080fd5b5061016b6107d1565b6040516101789190610ba0565b60405180910390f35b34801561018d57600080fd5b506101a860048036038101906101a39190610a4d565b6107f5565b6040516101b59190610ba0565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461083490919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610bd6565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610379576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561042457600080828154811061039e5761039d610f28565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041c90610e81565b91505061037c565b50600067ffffffffffffffff8111156104405761043f610f57565b5b60405190808252806020026020018201604052801561046e5781602001602082028036833780820191505090505b5060009080519060200190610484929190610910565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104cb90610b8b565b60006040518083038185875af1925050503d8060008114610508576040519150601f19603f3d011682016040523d82523d6000602084013e61050d565b606091505b5050905080610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054890610bf6565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008080548060200260200160405190810160405280929190818152602001828054801561061557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105cb575b5050505050905060005b81518110156106a057600082828151811061063d5761063c610f28565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061069890610e81565b91505061061f565b50600067ffffffffffffffff8111156106bc576106bb610f57565b5b6040519080825280602002602001820160405280156106ea5781602001602082028036833780820191505090505b5060009080519060200190610700929190610910565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161074790610b8b565b60006040518083038185875af1925050503d8060008114610784576040519150601f19603f3d011682016040523d82523d6000602084013e610789565b606091505b50509050806107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c490610bf6565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061080557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061084083610870565b90506000670de0b6b3a764000085836108599190610d95565b6108639190610c4d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108b957600080fd5b505afa1580156108cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f19190610a7a565b5050509150506402540be400816109089190610c7e565b915050919050565b828054828255906000526020600020908101928215610989579160200282015b828111156109885782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610930565b5b509050610996919061099a565b5090565b5b808211156109b357600081600090555060010161099b565b5090565b6000813590506109c681610fe0565b92915050565b6000815190506109db81610ff7565b92915050565b6000813590506109f08161100e565b92915050565b600081519050610a058161100e565b92915050565b600081519050610a1a81611025565b92915050565b600060208284031215610a3657610a35610f86565b5b6000610a44848285016109b7565b91505092915050565b600060208284031215610a6357610a62610f86565b5b6000610a71848285016109e1565b91505092915050565b600080600080600060a08688031215610a9657610a95610f86565b5b6000610aa488828901610a0b565b9550506020610ab5888289016109cc565b9450506040610ac6888289016109f6565b9350506060610ad7888289016109f6565b9250506080610ae888828901610a0b565b9150509295509295909350565b610afe81610def565b82525050565b610b0d81610e4b565b82525050565b6000610b20601983610c3c565b9150610b2b82610f8b565b602082019050919050565b6000610b43600083610c31565b9150610b4e82610fb4565b600082019050919050565b6000610b66600c83610c3c565b9150610b7182610fb7565b602082019050919050565b610b8581610e2b565b82525050565b6000610b9682610b36565b9150819050919050565b6000602082019050610bb56000830184610af5565b92915050565b6000602082019050610bd06000830184610b04565b92915050565b60006020820190508181036000830152610bef81610b13565b9050919050565b60006020820190508181036000830152610c0f81610b59565b9050919050565b6000602082019050610c2b6000830184610b7c565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610c5882610e2b565b9150610c6383610e2b565b925082610c7357610c72610ef9565b5b828204905092915050565b6000610c8982610e01565b9150610c9483610e01565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610cd357610cd2610eca565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d1057610d0f610eca565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d4d57610d4c610eca565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d8a57610d89610eca565b5b828202905092915050565b6000610da082610e2b565b9150610dab83610e2b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610de457610de3610eca565b5b828202905092915050565b6000610dfa82610e0b565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610e5682610e5d565b9050919050565b6000610e6882610e6f565b9050919050565b6000610e7a82610e0b565b9050919050565b6000610e8c82610e2b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ebf57610ebe610eca565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f5072696365206973206c6f7765722c2073656e64206d6f726500000000000000600082015250565b50565b7f43616c6c2066616c696564200000000000000000000000000000000000000000600082015250565b610fe981610def565b8114610ff457600080fd5b50565b61100081610e01565b811461100b57600080fd5b50565b61101781610e2b565b811461102257600080fd5b50565b61102e81610e35565b811461103957600080fd5b5056fea2646970667358221220e196d21ded159740999e432b818f3f7e6ba1a617a60b7232f90e65495462aa3964736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610142578063be2693f01461014c578063dba6335f14610156578063dc0d3dff146101815761008e565b8063213dbea2146100985780633ccfd60b146100c35780633e47d6f3146100da578063741bef1a146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102e7565b6040516100ba9190610c16565b60405180910390f35b3480156100cf57600080fd5b506100d86102f4565b005b3480156100e657600080fd5b5061010160048036038101906100fc9190610a20565b610554565b60405161010e9190610c16565b60405180910390f35b34801561012357600080fd5b5061012c61056c565b6040516101399190610bbb565b60405180910390f35b61014a6101be565b005b610154610592565b005b34801561016257600080fd5b5061016b6107d1565b6040516101789190610ba0565b60405180910390f35b34801561018d57600080fd5b506101a860048036038101906101a39190610a4d565b6107f5565b6040516101b59190610ba0565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461083490919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610bd6565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610379576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561042457600080828154811061039e5761039d610f28565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041c90610e81565b91505061037c565b50600067ffffffffffffffff8111156104405761043f610f57565b5b60405190808252806020026020018201604052801561046e5781602001602082028036833780820191505090505b5060009080519060200190610484929190610910565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104cb90610b8b565b60006040518083038185875af1925050503d8060008114610508576040519150601f19603f3d011682016040523d82523d6000602084013e61050d565b606091505b5050905080610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054890610bf6565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008080548060200260200160405190810160405280929190818152602001828054801561061557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105cb575b5050505050905060005b81518110156106a057600082828151811061063d5761063c610f28565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061069890610e81565b91505061061f565b50600067ffffffffffffffff8111156106bc576106bb610f57565b5b6040519080825280602002602001820160405280156106ea5781602001602082028036833780820191505090505b5060009080519060200190610700929190610910565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161074790610b8b565b60006040518083038185875af1925050503d8060008114610784576040519150601f19603f3d011682016040523d82523d6000602084013e610789565b606091505b50509050806107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c490610bf6565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061080557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061084083610870565b90506000670de0b6b3a764000085836108599190610d95565b6108639190610c4d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108b957600080fd5b505afa1580156108cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f19190610a7a565b5050509150506402540be400816109089190610c7e565b915050919050565b828054828255906000526020600020908101928215610989579160200282015b828111156109885782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610930565b5b509050610996919061099a565b5090565b5b808211156109b357600081600090555060010161099b565b5090565b6000813590506109c681610fe0565b92915050565b6000815190506109db81610ff7565b92915050565b6000813590506109f08161100e565b92915050565b600081519050610a058161100e565b92915050565b600081519050610a1a81611025565b92915050565b600060208284031215610a3657610a35610f86565b5b6000610a44848285016109b7565b91505092915050565b600060208284031215610a6357610a62610f86565b5b6000610a71848285016109e1565b91505092915050565b600080600080600060a08688031215610a9657610a95610f86565b5b6000610aa488828901610a0b565b9550506020610ab5888289016109cc565b9450506040610ac6888289016109f6565b9350506060610ad7888289016109f6565b9250506080610ae888828901610a0b565b9150509295509295909350565b610afe81610def565b82525050565b610b0d81610e4b565b82525050565b6000610b20601983610c3c565b9150610b2b82610f8b565b602082019050919050565b6000610b43600083610c31565b9150610b4e82610fb4565b600082019050919050565b6000610b66600c83610c3c565b9150610b7182610fb7565b602082019050919050565b610b8581610e2b565b82525050565b6000610b9682610b36565b9150819050919050565b6000602082019050610bb56000830184610af5565b92915050565b6000602082019050610bd06000830184610b04565b92915050565b60006020820190508181036000830152610bef81610b13565b9050919050565b60006020820190508181036000830152610c0f81610b59565b9050919050565b6000602082019050610c2b6000830184610b7c565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610c5882610e2b565b9150610c6383610e2b565b925082610c7357610c72610ef9565b5b828204905092915050565b6000610c8982610e01565b9150610c9483610e01565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610cd357610cd2610eca565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d1057610d0f610eca565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d4d57610d4c610eca565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d8a57610d89610eca565b5b828202905092915050565b6000610da082610e2b565b9150610dab83610e2b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610de457610de3610eca565b5b828202905092915050565b6000610dfa82610e0b565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610e5682610e5d565b9050919050565b6000610e6882610e6f565b9050919050565b6000610e7a82610e0b565b9050919050565b6000610e8c82610e2b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ebf57610ebe610eca565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f5072696365206973206c6f7765722c2073656e64206d6f726500000000000000600082015250565b50565b7f43616c6c2066616c696564200000000000000000000000000000000000000000600082015250565b610fe981610def565b8114610ff457600080fd5b50565b61100081610e01565b811461100b57600080fd5b50565b61101781610e2b565b811461102257600080fd5b50565b61102e81610e35565b811461103957600080fd5b5056fea2646970667358221220e196d21ded159740999e432b818f3f7e6ba1a617a60b7232f90e65495462aa3964736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}